{"remainingRequest":"/Users/xiaodong/Downloads/troubletool-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaodong/Downloads/troubletool-master/src/components/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaodong/Downloads/troubletool-master/src/components/Index.vue","mtime":1649224754000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Index.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-app-bar color=\"primary\" app>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"success\" v-if=\"testing == false\" @click=\"startTest\">\r\n        {{ text.start_text }}\r\n      </v-btn>\r\n    </v-app-bar>\r\n    <v-main>\r\n      <v-container>\r\n        <v-row wrap fill-height>\r\n          <!-- start page -->\r\n          <v-col md4 offset-md4 v-if=\"currentStep == 0\">\r\n            <v-card>\r\n              <v-card-title>{{ text.following_step }}</v-card-title>\r\n              <v-card-text>\r\n                <v-list>\r\n                  <v-list-item v-for=\"item in testUnites\" :key=\"item.id\">\r\n                    <v-list-item-content>\r\n                      <v-list-item-title>{{ item.label }}</v-list-item-title>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n          <!-- result page -->\r\n          <v-col md4 offset-md4 v-else-if=\"currentStep == 7\">\r\n            <v-card>\r\n              <v-card-title>{{ text.test_report }}</v-card-title>\r\n              <v-card-text>\r\n                <v-list>\r\n                  <v-list-item v-for=\"item in testUnites\" :key=\"item.id\">\r\n                    <v-list-item-content>\r\n                      <v-list-item-title>{{ item.label }}</v-list-item-title>\r\n                      <v-icon v-if=\"item.notError\" color=\"success\">良好</v-icon>\r\n                      <v-icon v-else color=\"error\">异常</v-icon>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n\r\n          <v-col md4 offset-md4 v-else>\r\n            <v-stepper v-model=\"currentStep\">\r\n              <v-stepper-header>\r\n                <v-stepper-step :complete=\"currentStep > 0\" step=\"1\">\r\n                  兼容性测试\r\n                </v-stepper-step>\r\n\r\n                <v-divider></v-divider>\r\n                <v-stepper-step :complete=\"currentStep > 1\" step=\"2\">\r\n                  麦克风测试\r\n                </v-stepper-step>\r\n\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 2\" step=\"3\">\r\n                  扬声器测试\r\n                </v-stepper-step>\r\n\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 3\" step=\"4\">\r\n                  分辨率测试\r\n                </v-stepper-step>\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 4\" step=\"5\">\r\n                  连通性测试\r\n                </v-stepper-step>\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 5\" step=\"6\">\r\n                  摄像头预览测试\r\n                </v-stepper-step>\r\n                <v-divider></v-divider>\r\n                <v-stepper-step :complete=\"currentStep > 6\" step=\"7\">\r\n                  检测结果\r\n                </v-stepper-step>\r\n              </v-stepper-header>\r\n\r\n              <v-stepper-items>\r\n                <!-- system requirements test -->\r\n                <v-stepper-content step=\"1\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.browser_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.support_desc }}\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          {{ text.checking }}\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <div v-if=\"navInfo\">{{navInfo}}</div>\r\n                          <v-progress-linear\r\n                            :indeterminate=\"true\"\r\n                          ></v-progress-linear>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- mic test -->\r\n                <v-stepper-content step=\"2\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.microphone_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.microphone_check_desc }}\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          {{ text.microphone_volume_check_desc }}\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <v-progress-linear\r\n                            :value=\"inputVolume\"\r\n                          ></v-progress-linear>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- speaker test -->\r\n                <v-stepper-content step=\"3\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.speacker_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.speaker_check_desc }}\r\n                        </v-card-text>\r\n                        <v-btn @click=\"speakerTest\" style=\"margin-left:16px\"> 听得见 </v-btn>\r\n\r\n                        <v-btn @click=\"speakerTestError\" text color=\"error\"> 听不见 </v-btn>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">{{ text.sample_music }}</div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <audio id=\"sampleMusic\" ref=\"audio\" controls=\"controls\">\r\n                            <source\r\n                              src=\"../assets/music.mp3\"\r\n                              type=\"audio/mp3\"\r\n                            />\r\n                            {{ text.sample_music_desc }}\r\n                          </audio>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- resolution test -->\r\n                <v-stepper-content step=\"4\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.resolution_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.resolution_check_desc }}\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          {{ text.resolution_list }}\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <v-list>\r\n                            <v-list-item\r\n                              v-for=\"(profile, index) in profiles\"\r\n                              :key=\"index\"\r\n                            >\r\n                              <v-list-item-content>\r\n                                <v-list-item-title>{{\r\n                                  profile.resolution\r\n                                }}</v-list-item-title>\r\n                                <v-list-item-action icon>\r\n                                  <v-icon\r\n                                    v-if=\"profile.status === 'resolve'\"\r\n                                    color=\"success\"\r\n                                    >良好</v-icon\r\n                                  >\r\n                                  <v-icon\r\n                                    v-else-if=\"profile.status === 'reject'\"\r\n                                    color=\"error\"\r\n                                    >异常</v-icon\r\n                                  >\r\n                                  <v-icon v-else>等待中</v-icon>\r\n                                </v-list-item-action>\r\n                              </v-list-item-content>\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- connection test -->\r\n                <v-stepper-content step=\"5\">\r\n                  <v-row md12 v-if=\"subscribed == false\">\r\n                    <v-alert>\r\n                      {{ text.network_check_desc }}\r\n                    </v-alert>\r\n                  </v-row>\r\n                  <v-row v-else>\r\n                    <v-col md6>\r\n                      <v-card height=\"100%\">\r\n                        <v-card-text>\r\n                          <ve-line\r\n                            :data=\"bitrateData\"\r\n                            :settings=\"chartSettings\"\r\n                          ></ve-line>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card height=\"100%\">\r\n                        <v-card-text>\r\n                          <ve-line\r\n                            :data=\"packetsData\"\r\n                            :settings=\"chartSettings\"\r\n                          ></ve-line>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n                <!-- camera test -->\r\n                <v-stepper-content step=\"6\">\r\n                  <v-row style=\"min-height: 360px\" ref=\"row\">\r\n                    <v-col>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-text>\r\n                        <v-row>\r\n                          <v-col class=\"d-flex\">\r\n                            <v-select\r\n                              :items=\"items\"\r\n                              :label=\"value_type ?'':'请选择摄像头'\"\r\n                              dense\r\n                              solo\r\n                              v-model=\"value_type\"\r\n                            ref=\"select\" style=\"max-width:100%\" \r\n                            @change=\"cameraPreview(value_type)\"></v-select>\r\n                            <!-- <v-btn @click=\"cameraPreview\" style=\"margin-left:16px\"> 确定 </v-btn> -->\r\n                          </v-col>\r\n                          \r\n                        </v-row>\r\n                        \r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"row\">\r\n                            {{ text.show }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                        <div id=\"videoPlay\" ref=\"video\"></div>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n              </v-stepper-items>\r\n            </v-stepper>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport * as i18n from \"../utils/i18n\";\r\nimport * as webRTC from \"../utils/NIM_Web_NERTC_v4.6.0\";\r\nimport { profileArray } from \"../utils/resolutionList\";\r\nexport default {\r\n  name: \"Index\",\r\n\r\n  data() {\r\n    return {\r\n      client: {},\r\n      localStream: {},\r\n      currentStep: 0,\r\n      inputVolume: 0,\r\n      uid: \"\",\r\n      meetSystemRequirements: false,\r\n      testUnites: [\r\n        {\r\n          id: \"0\",\r\n          label: \"浏览器兼容性\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"1\",\r\n          label: \"麦克风\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"2\",\r\n          label: \"扬声器\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"3\",\r\n          label: \"分辨率\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"4\",\r\n          label: \"连通性\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"5\",\r\n          label: \"摄像头预览\",\r\n          notError: true,\r\n          extra: \"\",\r\n        }\r\n      ],\r\n      profiles: profileArray.map((item) => {\r\n        item.status = \"pending\";\r\n        return item;\r\n      }),\r\n      chartSettings: {},\r\n      bitrateData: {\r\n        columns: [\"index\", \"发送视频码率\", \"发送音频码率\"],\r\n        rows: [\r\n          {\r\n            index: 0,\r\n            发送视频码率: 0,\r\n            发送音频码率: 0,\r\n          },\r\n        ],\r\n      },\r\n      packetsData: {\r\n        columns: [\"index\", \"发送视频丢包率\", \"发送音频丢包率\"],\r\n        rows: [\r\n          {\r\n            index: 0,\r\n            发送视频丢包率: 0,\r\n            发送音频丢包率: 0,\r\n          },\r\n        ],\r\n      },\r\n      subscribed: false,\r\n      testing: false,\r\n      navInfo:false,\r\n      items:[],\r\n      value_type:\"\",\r\n    };\r\n  },\r\n  computed: {\r\n    text() {\r\n      const lang = \"zh\";\r\n      const property = i18n[lang][\"default\"];\r\n      const obj = {};\r\n      for (let key of Object.keys(property)) {\r\n        Object.assign(obj, {\r\n          [`${key}`]: property[key],\r\n        });\r\n      }\r\n      return obj;\r\n    },\r\n  },\r\n  mounted() {\r\n    webRTC.getParameters().allowEmptyMedia = true\r\n    window.yx=this;\r\n    this.client = webRTC.createClient({\r\n      appkey: \"45c6af3c98409b18a84451215d0bdd6e\",\r\n      debug: true,\r\n    });\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.currentStep++;\r\n      this.testing = true;\r\n      setTimeout(() => {\r\n        this.systemRequirementsTest();\r\n        \r\n      }, 1500);\r\n    },\r\n    systemRequirementsTest() {\r\n      //第一步检测浏览器兼容性\r\n      try{\r\n        this.meetSystemRequirements = webRTC.checkSystemRequirements();\r\n        if(this.meetSystemRequirements){\r\n          this.text.checking=\"浏览器已适配\";\r\n         this.navInfo=navigator.userAgent;\r\n          this.$forceUpdate();\r\n        }else{\r\n          this.text.checking=\"浏览器未适配\";\r\n          this.navInfo=navigator.userAgent;\r\n          this.$forceUpdate(); \r\n        }\r\n        console.log(\"浏览器兼容性已检测完！！！\");\r\n        setTimeout(()=>{\r\n          this.currentStep++;\r\n          this.audioTest()\r\n        }, 2000);\r\n        \r\n      }catch(ex){\r\n        (this.testUnites.find(e=>e.id==0)).notError=false; \r\n      }\r\n      \r\n    },\r\n    audioTest() {\r\n      //第二步检测麦克风可用性\r\n      let localUid=Math.floor(Math.random() * 10000);\r\n      this.client\r\n          .join({\r\n            channelName: \"房间名称\",\r\n            uid: localUid,\r\n            token: \"\",\r\n          })\r\n          .then(() => {\r\n            console.info(\"加入房间成功...\");\r\n            //初始化本地流\r\n            let localStream = webRTC.createStream({\r\n              uid: localUid,\r\n              audio: true,\r\n              video: false,\r\n            });\r\n            //启动媒体，打开实例对象中设置的媒体设备\r\n            localStream\r\n              .init()\r\n              .then(() => {\r\n                console.warn(\"音视频开启完成，可以播放了\");\r\n                localStream\r\n                  .play(null, {\r\n                    audio: true,\r\n                    video: false,\r\n                  })\r\n                  .then(() => {\r\n                    console.warn(\"播放成功\");\r\n                  })\r\n                  .catch((err) => {\r\n                    console.warn(\"播放失败: \", err);\r\n                    (this.testUnites.find(e=>e.id==1)).notError=false;\r\n                  });\r\n               })\r\n              .catch((err) => {\r\n                console.warn(\"音视频初始化失败: \", err);\r\n                localStream=null;\r\n                (this.testUnites.find(e=>e.id==1)).notError=false; \r\n              });\r\n\r\n            let _this = this;\r\n            let micTestTimer = setInterval(() => {\r\n              _this.inputVolume = parseInt(localStream.getAudioLevel() * 100);\r\n            }, 100);\r\n            setTimeout(async() => {\r\n              try{\r\n                clearInterval(micTestTimer);\r\n                //这里的异步函数增加 await逻辑，确保stream销毁之后再leave\r\n                await localStream.close({ type: \"audio\"});\r\n                localStream.destroy();\r\n                console.log(localStream);\r\n                await this.client.leave();\r\n                this.currentStep =3;\r\n              }catch(err){\r\n                console.warn(\"音频销毁失败: \", err);\r\n                localStream=null;\r\n                (this.testUnites.find(e=>e.id==1)).notError=false; \r\n                this.currentStep =3;\r\n              }\r\n            }, 5000);\r\n          }).catch((err)=>{\r\n            console.warn(\"加入房间失败: \", err);\r\n            (this.testUnites.find(e=>e.id==1)).notError=false; \r\n            this.currentStep =3;\r\n          })\r\n    },\r\n    speakerTest() {\r\n      //第三步检测扬声器可用性\r\n      this.$refs.audio.pause();\r\n      this.resolutionTest();\r\n    },\r\n    speakerTestError() {\r\n      console.warn(\"本地扬声器异常，请做对应的检测！\")\r\n      this.$refs.audio.pause();\r\n      this.resolutionTest();\r\n      (this.testUnites.find(e=>e.id==2)).notError=false;\r\n    },\r\n    async resolutionTest() {\r\n      this.currentStep = 4;\r\n        let localStream = webRTC.createStream({\r\n            uid: Math.floor(Math.random() * 10000),\r\n            audio: false,\r\n            video: false,\r\n          });\r\n        let Profile=new Array(2,4,8,16);//分辨率枚举值\r\n        console.log(this.profiles);\r\n        for(let i in Profile){\r\n          try{\r\n            localStream.setVideoProfile({\r\n              resolution: Profile[i],\r\n              frameRate: webRTC.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_15,\r\n            })\r\n            await localStream.open({type:\"video\"})\r\n            console.log(`${localStream.getVideoTrack().getSettings().height}P init success`);\r\n            this.profiles[i].status = \"resolve\";\r\n            await localStream.close({type:\"video\"});\r\n          }catch{\r\n            console.log('stream init failed');\r\n            this.profiles[i].status = \"reject\";   \r\n            localStream=null;\r\n          }\r\n        }\r\n      setTimeout(() => {\r\n          console.log(localStream);\r\n          this.connectionTest();\r\n        }, 3000);\r\n      \r\n\r\n    },\r\n    connectionTest() {\r\n      this.currentStep = 5;\r\n      this.connectionBuild().then(([localUid, remoteClient]) => {\r\n        this.renderChart(localUid, remoteClient);\r\n      });\r\n    },\r\n    connectionBuild() {\r\n      return new Promise((resolve) => {\r\n        let localUid = Math.floor(Math.random() * 10000);\r\n        let cameraId=\"\";\r\n       navigator.mediaDevices.enumerateDevices().then((devices)=>{\r\n        for(let j in devices){\r\n          //为了过滤虚拟摄像头导致检测结果不准\r\n          if(devices[j].kind==\"videoinput\"&&devices[j].label.indexOf(\"Virtual\")==-1&&devices[j].label.indexOf(\"virtual\")==-1){\r\n            cameraId=devices[j].deviceId;\r\n            console.log(devices[j].deviceId+devices[j].label);       \r\n           }\r\n        }\r\n        this.client\r\n          .join({\r\n            channelName: \"房间名称\",\r\n            uid: localUid,\r\n            token: \"\",\r\n          })\r\n          .then(() => {\r\n            console.info(\"加入房间成功...\");\r\n            //初始化本地流，并且发布\r\n            let localStream = webRTC.createStream({\r\n              uid: localUid,\r\n              audio: true,\r\n              video: true,\r\n              cameraId:cameraId,\r\n              client:this.client\r\n            });\r\n            \r\n            //启动媒体，打开实例对象中设置的媒体设备\r\n            localStream.setVideoProfile({\r\n          resolution: webRTC.VIDEO_QUALITY.VIDEO_QUALITY_720p,\r\n          frameRate: webRTC.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_15,\r\n        })\r\n            localStream\r\n              .init()\r\n              .then(() => {\r\n                console.warn(\"音视频开启完成，可以播放了\");\r\n                // 发布\r\n                this.client\r\n                  .publish(localStream)\r\n                  .then(() => {\r\n                    console.warn(\"本地 publish 成功\");\r\n                  })\r\n                  .catch((err) => {\r\n                    console.error(\"本地 publish 失败: \", err);\r\n                  });\r\n              })\r\n              .catch((err) => {\r\n                console.warn(\"音视频初始化失败: \", err);\r\n                localStream = null;\r\n              });\r\n          });\r\n        })\r\n\r\n        let remoteClient = webRTC.createClient({\r\n          appkey: \"45c6af3c98409b18a84451215d0bdd6e\", //您的 appkey\r\n          debug: true, //是否开启调试日志\r\n        });\r\n        let remoteUid = Math.floor(Math.random() * 10000);\r\n        remoteClient\r\n          .join({\r\n            channelName: \"房间名称\",\r\n            uid: remoteUid,\r\n            token: \"\",\r\n          })\r\n          .then(() => {\r\n            console.info(\"加入房间成功...\");\r\n          });\r\n\r\n        remoteClient.on(\"stream-added\", (evt) => {        \r\n          let remoteStream = evt.stream;\r\n          console.warn(\"收到对方发布的订阅消息: \", remoteStream.getId());\r\n          remoteStream.setSubscribeConfig({\r\n            audio: false,\r\n            video: true,\r\n          });\r\n          remoteClient\r\n            .subscribe(remoteStream)\r\n            .then(() => {\r\n              console.warn(\"本地 subscribe 成功\");\r\n              this.subscribed = true;\r\n            })\r\n            .catch((err) => {\r\n              console.warn(\"本地 subscribe 失败: \", err);\r\n            });\r\n        });\r\n\r\n        resolve([localUid, remoteClient]);\r\n      });\r\n    },\r\n    renderChart(localUid, remoteClient) {\r\n      let _this = this;\r\n      let indexCount = 1;\r\n\r\n      let statsTimer = setInterval(async () => {\r\n        const localVideoStats = await _this.client.getLocalVideoStats();\r\n        const localAudioStats = await _this.client.getLocalAudioStats();\r\n        const remoteVideoStatsMap = await remoteClient.getRemoteVideoStats();\r\n        const remoteAudioStatsMap = await remoteClient.getRemoteAudioStats();\r\n        if(localVideoStats[0]!=null && localAudioStats[0]!=null){\r\n            _this.bitrateData.rows.push({\r\n              index: indexCount,\r\n              发送视频码率: localVideoStats[0].SendBitrate,\r\n              发送音频码率: localAudioStats[0].SendBitrate,\r\n            });\r\n        }\r\n\r\n        if(remoteVideoStatsMap[localUid]!=null && remoteAudioStatsMap[localUid]!=null){\r\n            _this.packetsData.rows.push({\r\n            index: indexCount,\r\n            发送视频丢包率: remoteVideoStatsMap[localUid].PacketLossRate,\r\n            发送音频丢包率: remoteAudioStatsMap[localUid].PacketLossRate,\r\n          });\r\n        }\r\n\r\n        indexCount++;\r\n      }, 1000);\r\n\r\n      setTimeout(async() => {\r\n        clearInterval(statsTimer);\r\n        await this.client.leave();\r\n        await remoteClient.leave();\r\n        this.currentStep = 6;\r\n        this.deviceInit();\r\n      }, 15000);\r\n    },\r\n    async deviceInit(){\r\n      let devices= await navigator.mediaDevices.enumerateDevices();\r\n        for(let j in devices){\r\n          if(devices[j].kind==\"videoinput\"){\r\n            this.items.push({text:devices[j].label,value:devices[j].deviceId});\r\n          }\r\n        }\r\n    },\r\n    async cameraPreview(val){\r\n      console.log(val);\r\n      let localUid = Math.floor(Math.random() * 10000);\r\n      try{\r\n        if(typeof(val)!=\"string\"){\r\n          alert(\"请选择正确的摄像头\");\r\n        }else{\r\n          if(window.yx.localStream.getVideoTrack!=null){\r\n            await window.yx.localStream.close({ type: \"video\"});\r\n          }\r\n          this.localStream = webRTC.createStream({\r\n                  uid: localUid,\r\n                  audio: false,\r\n                  video: true,\r\n                  cameraId:val,\r\n                  client:this.client\r\n                });\r\n          await this.localStream.init();\r\n          await this.localStream.play(this.$refs.video,{ audio:false,video: true});\r\n          this.localStream.setLocalRenderMode({\r\n                width: 480,\r\n                height: 300,\r\n                cut: true    // 是否裁剪\r\n              }, \"video\");\r\n        }\r\n        setTimeout(async()=>{\r\n         await this.localStream.close({type:\"video\"});\r\n         this.currentStep = 7;\r\n         this.restore();\r\n        },5000)\r\n        \r\n      }catch{\r\n        console.warn(\"摄像头预览出错\");\r\n        (this.testUnites.find(e=>e.id==6)).notError=false; \r\n        this.currentStep =7;\r\n        this.restore();\r\n      }\r\n      \r\n    },\r\n    restore() {\r\n      setTimeout(() => {\r\n        this.currentStep = 0;\r\n        this.testing = false;\r\n        this.bitrateData= {\r\n          columns: [\"index\", \"发送视频码率\", \"发送音频码率\"],\r\n          rows: [\r\n              {\r\n                index: 0,\r\n                发送视频码率: 0,\r\n                发送音频码率: 0,\r\n              },\r\n            ],\r\n        };\r\n        this.packetsData={\r\n          columns: [\"index\", \"发送视频丢包率\", \"发送音频丢包率\"],\r\n          rows: [\r\n            {\r\n              index: 0,\r\n              发送视频丢包率: 0,\r\n              发送音频丢包率: 0,\r\n            },\r\n          ],\r\n        };\r\n        this.inputVolume=0;\r\n        this.subscribed=false;\r\n        for (let profile of this.profiles) {\r\n          profile.status='pending';\r\n        }\r\n      }, 10000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}