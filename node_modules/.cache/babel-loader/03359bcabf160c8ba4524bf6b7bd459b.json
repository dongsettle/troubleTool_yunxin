{"remainingRequest":"/Users/xiaodong/Downloads/troubletool-master/node_modules/babel-loader/lib/index.js!/Users/xiaodong/Downloads/troubletool-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xiaodong/Downloads/troubletool-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaodong/Downloads/troubletool-master/src/components/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xiaodong/Downloads/troubletool-master/src/components/Index.vue","mtime":1649224754000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaodong/Downloads/troubletool-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-app-bar color=\"primary\" app>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"success\" v-if=\"testing == false\" @click=\"startTest\">\r\n        {{ text.start_text }}\r\n      </v-btn>\r\n    </v-app-bar>\r\n    <v-main>\r\n      <v-container>\r\n        <v-row wrap fill-height>\r\n          <!-- start page -->\r\n          <v-col md4 offset-md4 v-if=\"currentStep == 0\">\r\n            <v-card>\r\n              <v-card-title>{{ text.following_step }}</v-card-title>\r\n              <v-card-text>\r\n                <v-list>\r\n                  <v-list-item v-for=\"item in testUnites\" :key=\"item.id\">\r\n                    <v-list-item-content>\r\n                      <v-list-item-title>{{ item.label }}</v-list-item-title>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n          <!-- result page -->\r\n          <v-col md4 offset-md4 v-else-if=\"currentStep == 7\">\r\n            <v-card>\r\n              <v-card-title>{{ text.test_report }}</v-card-title>\r\n              <v-card-text>\r\n                <v-list>\r\n                  <v-list-item v-for=\"item in testUnites\" :key=\"item.id\">\r\n                    <v-list-item-content>\r\n                      <v-list-item-title>{{ item.label }}</v-list-item-title>\r\n                      <v-icon v-if=\"item.notError\" color=\"success\">良好</v-icon>\r\n                      <v-icon v-else color=\"error\">异常</v-icon>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n\r\n          <v-col md4 offset-md4 v-else>\r\n            <v-stepper v-model=\"currentStep\">\r\n              <v-stepper-header>\r\n                <v-stepper-step :complete=\"currentStep > 0\" step=\"1\">\r\n                  兼容性测试\r\n                </v-stepper-step>\r\n\r\n                <v-divider></v-divider>\r\n                <v-stepper-step :complete=\"currentStep > 1\" step=\"2\">\r\n                  麦克风测试\r\n                </v-stepper-step>\r\n\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 2\" step=\"3\">\r\n                  扬声器测试\r\n                </v-stepper-step>\r\n\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 3\" step=\"4\">\r\n                  分辨率测试\r\n                </v-stepper-step>\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 4\" step=\"5\">\r\n                  连通性测试\r\n                </v-stepper-step>\r\n                <v-divider></v-divider>\r\n\r\n                <v-stepper-step :complete=\"currentStep > 5\" step=\"6\">\r\n                  摄像头预览测试\r\n                </v-stepper-step>\r\n                <v-divider></v-divider>\r\n                <v-stepper-step :complete=\"currentStep > 6\" step=\"7\">\r\n                  检测结果\r\n                </v-stepper-step>\r\n              </v-stepper-header>\r\n\r\n              <v-stepper-items>\r\n                <!-- system requirements test -->\r\n                <v-stepper-content step=\"1\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.browser_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.support_desc }}\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          {{ text.checking }}\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <div v-if=\"navInfo\">{{navInfo}}</div>\r\n                          <v-progress-linear\r\n                            :indeterminate=\"true\"\r\n                          ></v-progress-linear>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- mic test -->\r\n                <v-stepper-content step=\"2\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.microphone_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.microphone_check_desc }}\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          {{ text.microphone_volume_check_desc }}\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <v-progress-linear\r\n                            :value=\"inputVolume\"\r\n                          ></v-progress-linear>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- speaker test -->\r\n                <v-stepper-content step=\"3\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.speacker_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.speaker_check_desc }}\r\n                        </v-card-text>\r\n                        <v-btn @click=\"speakerTest\" style=\"margin-left:16px\"> 听得见 </v-btn>\r\n\r\n                        <v-btn @click=\"speakerTestError\" text color=\"error\"> 听不见 </v-btn>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">{{ text.sample_music }}</div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <audio id=\"sampleMusic\" ref=\"audio\" controls=\"controls\">\r\n                            <source\r\n                              src=\"../assets/music.mp3\"\r\n                              type=\"audio/mp3\"\r\n                            />\r\n                            {{ text.sample_music_desc }}\r\n                          </audio>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- resolution test -->\r\n                <v-stepper-content step=\"4\">\r\n                  <v-row>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"headline\">\r\n                            {{ text.resolution_check }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          {{ text.resolution_check_desc }}\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          {{ text.resolution_list }}\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                          <v-list>\r\n                            <v-list-item\r\n                              v-for=\"(profile, index) in profiles\"\r\n                              :key=\"index\"\r\n                            >\r\n                              <v-list-item-content>\r\n                                <v-list-item-title>{{\r\n                                  profile.resolution\r\n                                }}</v-list-item-title>\r\n                                <v-list-item-action icon>\r\n                                  <v-icon\r\n                                    v-if=\"profile.status === 'resolve'\"\r\n                                    color=\"success\"\r\n                                    >良好</v-icon\r\n                                  >\r\n                                  <v-icon\r\n                                    v-else-if=\"profile.status === 'reject'\"\r\n                                    color=\"error\"\r\n                                    >异常</v-icon\r\n                                  >\r\n                                  <v-icon v-else>等待中</v-icon>\r\n                                </v-list-item-action>\r\n                              </v-list-item-content>\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n\r\n                <!-- connection test -->\r\n                <v-stepper-content step=\"5\">\r\n                  <v-row md12 v-if=\"subscribed == false\">\r\n                    <v-alert>\r\n                      {{ text.network_check_desc }}\r\n                    </v-alert>\r\n                  </v-row>\r\n                  <v-row v-else>\r\n                    <v-col md6>\r\n                      <v-card height=\"100%\">\r\n                        <v-card-text>\r\n                          <ve-line\r\n                            :data=\"bitrateData\"\r\n                            :settings=\"chartSettings\"\r\n                          ></ve-line>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col md6>\r\n                      <v-card height=\"100%\">\r\n                        <v-card-text>\r\n                          <ve-line\r\n                            :data=\"packetsData\"\r\n                            :settings=\"chartSettings\"\r\n                          ></ve-line>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n                <!-- camera test -->\r\n                <v-stepper-content step=\"6\">\r\n                  <v-row style=\"min-height: 360px\" ref=\"row\">\r\n                    <v-col>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-text>\r\n                        <v-row>\r\n                          <v-col class=\"d-flex\">\r\n                            <v-select\r\n                              :items=\"items\"\r\n                              :label=\"value_type ?'':'请选择摄像头'\"\r\n                              dense\r\n                              solo\r\n                              v-model=\"value_type\"\r\n                            ref=\"select\" style=\"max-width:100%\" \r\n                            @change=\"cameraPreview(value_type)\"></v-select>\r\n                            <!-- <v-btn @click=\"cameraPreview\" style=\"margin-left:16px\"> 确定 </v-btn> -->\r\n                          </v-col>\r\n                          \r\n                        </v-row>\r\n                        \r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                    <v-col>\r\n                      <v-card color=\"rgba(0,157,231,0.2)\" height=\"100%\">\r\n                        <v-card-title>\r\n                          <div class=\"row\">\r\n                            {{ text.show }}\r\n                          </div>\r\n                        </v-card-title>\r\n                        <v-card-text>\r\n                        <div id=\"videoPlay\" ref=\"video\"></div>\r\n                        </v-card-text>\r\n                      </v-card>\r\n                    </v-col>\r\n                  </v-row>\r\n                </v-stepper-content>\r\n              </v-stepper-items>\r\n            </v-stepper>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport * as i18n from \"../utils/i18n\";\r\nimport * as webRTC from \"../utils/NIM_Web_NERTC_v4.6.0\";\r\nimport { profileArray } from \"../utils/resolutionList\";\r\nexport default {\r\n  name: \"Index\",\r\n\r\n  data() {\r\n    return {\r\n      client: {},\r\n      localStream: {},\r\n      currentStep: 0,\r\n      inputVolume: 0,\r\n      uid: \"\",\r\n      meetSystemRequirements: false,\r\n      testUnites: [\r\n        {\r\n          id: \"0\",\r\n          label: \"浏览器兼容性\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"1\",\r\n          label: \"麦克风\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"2\",\r\n          label: \"扬声器\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"3\",\r\n          label: \"分辨率\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"4\",\r\n          label: \"连通性\",\r\n          notError: true,\r\n          extra: \"\",\r\n        },\r\n        {\r\n          id: \"5\",\r\n          label: \"摄像头预览\",\r\n          notError: true,\r\n          extra: \"\",\r\n        }\r\n      ],\r\n      profiles: profileArray.map((item) => {\r\n        item.status = \"pending\";\r\n        return item;\r\n      }),\r\n      chartSettings: {},\r\n      bitrateData: {\r\n        columns: [\"index\", \"发送视频码率\", \"发送音频码率\"],\r\n        rows: [\r\n          {\r\n            index: 0,\r\n            发送视频码率: 0,\r\n            发送音频码率: 0,\r\n          },\r\n        ],\r\n      },\r\n      packetsData: {\r\n        columns: [\"index\", \"发送视频丢包率\", \"发送音频丢包率\"],\r\n        rows: [\r\n          {\r\n            index: 0,\r\n            发送视频丢包率: 0,\r\n            发送音频丢包率: 0,\r\n          },\r\n        ],\r\n      },\r\n      subscribed: false,\r\n      testing: false,\r\n      navInfo:false,\r\n      items:[],\r\n      value_type:\"\",\r\n    };\r\n  },\r\n  computed: {\r\n    text() {\r\n      const lang = \"zh\";\r\n      const property = i18n[lang][\"default\"];\r\n      const obj = {};\r\n      for (let key of Object.keys(property)) {\r\n        Object.assign(obj, {\r\n          [`${key}`]: property[key],\r\n        });\r\n      }\r\n      return obj;\r\n    },\r\n  },\r\n  mounted() {\r\n    webRTC.getParameters().allowEmptyMedia = true\r\n    window.yx=this;\r\n    this.client = webRTC.createClient({\r\n      appkey: \"45c6af3c98409b18a84451215d0bdd6e\",\r\n      debug: true,\r\n    });\r\n  },\r\n  methods: {\r\n    startTest() {\r\n      this.currentStep++;\r\n      this.testing = true;\r\n      setTimeout(() => {\r\n        this.systemRequirementsTest();\r\n        \r\n      }, 1500);\r\n    },\r\n    systemRequirementsTest() {\r\n      //第一步检测浏览器兼容性\r\n      try{\r\n        this.meetSystemRequirements = webRTC.checkSystemRequirements();\r\n        if(this.meetSystemRequirements){\r\n          this.text.checking=\"浏览器已适配\";\r\n         this.navInfo=navigator.userAgent;\r\n          this.$forceUpdate();\r\n        }else{\r\n          this.text.checking=\"浏览器未适配\";\r\n          this.navInfo=navigator.userAgent;\r\n          this.$forceUpdate(); \r\n        }\r\n        console.log(\"浏览器兼容性已检测完！！！\");\r\n        setTimeout(()=>{\r\n          this.currentStep++;\r\n          this.audioTest()\r\n        }, 2000);\r\n        \r\n      }catch(ex){\r\n        (this.testUnites.find(e=>e.id==0)).notError=false; \r\n      }\r\n      \r\n    },\r\n    audioTest() {\r\n      //第二步检测麦克风可用性\r\n      let localUid=Math.floor(Math.random() * 10000);\r\n      this.client\r\n          .join({\r\n            channelName: \"房间名称\",\r\n            uid: localUid,\r\n            token: \"\",\r\n          })\r\n          .then(() => {\r\n            console.info(\"加入房间成功...\");\r\n            //初始化本地流\r\n            let localStream = webRTC.createStream({\r\n              uid: localUid,\r\n              audio: true,\r\n              video: false,\r\n            });\r\n            //启动媒体，打开实例对象中设置的媒体设备\r\n            localStream\r\n              .init()\r\n              .then(() => {\r\n                console.warn(\"音视频开启完成，可以播放了\");\r\n                localStream\r\n                  .play(null, {\r\n                    audio: true,\r\n                    video: false,\r\n                  })\r\n                  .then(() => {\r\n                    console.warn(\"播放成功\");\r\n                  })\r\n                  .catch((err) => {\r\n                    console.warn(\"播放失败: \", err);\r\n                    (this.testUnites.find(e=>e.id==1)).notError=false;\r\n                  });\r\n               })\r\n              .catch((err) => {\r\n                console.warn(\"音视频初始化失败: \", err);\r\n                localStream=null;\r\n                (this.testUnites.find(e=>e.id==1)).notError=false; \r\n              });\r\n\r\n            let _this = this;\r\n            let micTestTimer = setInterval(() => {\r\n              _this.inputVolume = parseInt(localStream.getAudioLevel() * 100);\r\n            }, 100);\r\n            setTimeout(async() => {\r\n              try{\r\n                clearInterval(micTestTimer);\r\n                //这里的异步函数增加 await逻辑，确保stream销毁之后再leave\r\n                await localStream.close({ type: \"audio\"});\r\n                localStream.destroy();\r\n                console.log(localStream);\r\n                await this.client.leave();\r\n                this.currentStep =3;\r\n              }catch(err){\r\n                console.warn(\"音频销毁失败: \", err);\r\n                localStream=null;\r\n                (this.testUnites.find(e=>e.id==1)).notError=false; \r\n                this.currentStep =3;\r\n              }\r\n            }, 5000);\r\n          }).catch((err)=>{\r\n            console.warn(\"加入房间失败: \", err);\r\n            (this.testUnites.find(e=>e.id==1)).notError=false; \r\n            this.currentStep =3;\r\n          })\r\n    },\r\n    speakerTest() {\r\n      //第三步检测扬声器可用性\r\n      this.$refs.audio.pause();\r\n      this.resolutionTest();\r\n    },\r\n    speakerTestError() {\r\n      console.warn(\"本地扬声器异常，请做对应的检测！\")\r\n      this.$refs.audio.pause();\r\n      this.resolutionTest();\r\n      (this.testUnites.find(e=>e.id==2)).notError=false;\r\n    },\r\n    async resolutionTest() {\r\n      this.currentStep = 4;\r\n        let localStream = webRTC.createStream({\r\n            uid: Math.floor(Math.random() * 10000),\r\n            audio: false,\r\n            video: false,\r\n          });\r\n        let Profile=new Array(2,4,8,16);//分辨率枚举值\r\n        console.log(this.profiles);\r\n        for(let i in Profile){\r\n          try{\r\n            localStream.setVideoProfile({\r\n              resolution: Profile[i],\r\n              frameRate: webRTC.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_15,\r\n            })\r\n            await localStream.open({type:\"video\"})\r\n            console.log(`${localStream.getVideoTrack().getSettings().height}P init success`);\r\n            this.profiles[i].status = \"resolve\";\r\n            await localStream.close({type:\"video\"});\r\n          }catch{\r\n            console.log('stream init failed');\r\n            this.profiles[i].status = \"reject\";   \r\n            localStream=null;\r\n          }\r\n        }\r\n      setTimeout(() => {\r\n          console.log(localStream);\r\n          this.connectionTest();\r\n        }, 3000);\r\n      \r\n\r\n    },\r\n    connectionTest() {\r\n      this.currentStep = 5;\r\n      this.connectionBuild().then(([localUid, remoteClient]) => {\r\n        this.renderChart(localUid, remoteClient);\r\n      });\r\n    },\r\n    connectionBuild() {\r\n      return new Promise((resolve) => {\r\n        let localUid = Math.floor(Math.random() * 10000);\r\n        let cameraId=\"\";\r\n       navigator.mediaDevices.enumerateDevices().then((devices)=>{\r\n        for(let j in devices){\r\n          //为了过滤虚拟摄像头导致检测结果不准\r\n          if(devices[j].kind==\"videoinput\"&&devices[j].label.indexOf(\"Virtual\")==-1&&devices[j].label.indexOf(\"virtual\")==-1){\r\n            cameraId=devices[j].deviceId;\r\n            console.log(devices[j].deviceId+devices[j].label);       \r\n           }\r\n        }\r\n        this.client\r\n          .join({\r\n            channelName: \"房间名称\",\r\n            uid: localUid,\r\n            token: \"\",\r\n          })\r\n          .then(() => {\r\n            console.info(\"加入房间成功...\");\r\n            //初始化本地流，并且发布\r\n            let localStream = webRTC.createStream({\r\n              uid: localUid,\r\n              audio: true,\r\n              video: true,\r\n              cameraId:cameraId,\r\n              client:this.client\r\n            });\r\n            \r\n            //启动媒体，打开实例对象中设置的媒体设备\r\n            localStream.setVideoProfile({\r\n          resolution: webRTC.VIDEO_QUALITY.VIDEO_QUALITY_720p,\r\n          frameRate: webRTC.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_15,\r\n        })\r\n            localStream\r\n              .init()\r\n              .then(() => {\r\n                console.warn(\"音视频开启完成，可以播放了\");\r\n                // 发布\r\n                this.client\r\n                  .publish(localStream)\r\n                  .then(() => {\r\n                    console.warn(\"本地 publish 成功\");\r\n                  })\r\n                  .catch((err) => {\r\n                    console.error(\"本地 publish 失败: \", err);\r\n                  });\r\n              })\r\n              .catch((err) => {\r\n                console.warn(\"音视频初始化失败: \", err);\r\n                localStream = null;\r\n              });\r\n          });\r\n        })\r\n\r\n        let remoteClient = webRTC.createClient({\r\n          appkey: \"45c6af3c98409b18a84451215d0bdd6e\", //您的 appkey\r\n          debug: true, //是否开启调试日志\r\n        });\r\n        let remoteUid = Math.floor(Math.random() * 10000);\r\n        remoteClient\r\n          .join({\r\n            channelName: \"房间名称\",\r\n            uid: remoteUid,\r\n            token: \"\",\r\n          })\r\n          .then(() => {\r\n            console.info(\"加入房间成功...\");\r\n          });\r\n\r\n        remoteClient.on(\"stream-added\", (evt) => {        \r\n          let remoteStream = evt.stream;\r\n          console.warn(\"收到对方发布的订阅消息: \", remoteStream.getId());\r\n          remoteStream.setSubscribeConfig({\r\n            audio: false,\r\n            video: true,\r\n          });\r\n          remoteClient\r\n            .subscribe(remoteStream)\r\n            .then(() => {\r\n              console.warn(\"本地 subscribe 成功\");\r\n              this.subscribed = true;\r\n            })\r\n            .catch((err) => {\r\n              console.warn(\"本地 subscribe 失败: \", err);\r\n            });\r\n        });\r\n\r\n        resolve([localUid, remoteClient]);\r\n      });\r\n    },\r\n    renderChart(localUid, remoteClient) {\r\n      let _this = this;\r\n      let indexCount = 1;\r\n\r\n      let statsTimer = setInterval(async () => {\r\n        const localVideoStats = await _this.client.getLocalVideoStats();\r\n        const localAudioStats = await _this.client.getLocalAudioStats();\r\n        const remoteVideoStatsMap = await remoteClient.getRemoteVideoStats();\r\n        const remoteAudioStatsMap = await remoteClient.getRemoteAudioStats();\r\n        if(localVideoStats[0]!=null && localAudioStats[0]!=null){\r\n            _this.bitrateData.rows.push({\r\n              index: indexCount,\r\n              发送视频码率: localVideoStats[0].SendBitrate,\r\n              发送音频码率: localAudioStats[0].SendBitrate,\r\n            });\r\n        }\r\n\r\n        if(remoteVideoStatsMap[localUid]!=null && remoteAudioStatsMap[localUid]!=null){\r\n            _this.packetsData.rows.push({\r\n            index: indexCount,\r\n            发送视频丢包率: remoteVideoStatsMap[localUid].PacketLossRate,\r\n            发送音频丢包率: remoteAudioStatsMap[localUid].PacketLossRate,\r\n          });\r\n        }\r\n\r\n        indexCount++;\r\n      }, 1000);\r\n\r\n      setTimeout(async() => {\r\n        clearInterval(statsTimer);\r\n        await this.client.leave();\r\n        await remoteClient.leave();\r\n        this.currentStep = 6;\r\n        this.deviceInit();\r\n      }, 15000);\r\n    },\r\n    async deviceInit(){\r\n      let devices= await navigator.mediaDevices.enumerateDevices();\r\n        for(let j in devices){\r\n          if(devices[j].kind==\"videoinput\"){\r\n            this.items.push({text:devices[j].label,value:devices[j].deviceId});\r\n          }\r\n        }\r\n    },\r\n    async cameraPreview(val){\r\n      console.log(val);\r\n      let localUid = Math.floor(Math.random() * 10000);\r\n      try{\r\n        if(typeof(val)!=\"string\"){\r\n          alert(\"请选择正确的摄像头\");\r\n        }else{\r\n          if(window.yx.localStream.getVideoTrack!=null){\r\n            await window.yx.localStream.close({ type: \"video\"});\r\n          }\r\n          this.localStream = webRTC.createStream({\r\n                  uid: localUid,\r\n                  audio: false,\r\n                  video: true,\r\n                  cameraId:val,\r\n                  client:this.client\r\n                });\r\n          await this.localStream.init();\r\n          await this.localStream.play(this.$refs.video,{ audio:false,video: true});\r\n          this.localStream.setLocalRenderMode({\r\n                width: 480,\r\n                height: 300,\r\n                cut: true    // 是否裁剪\r\n              }, \"video\");\r\n        }\r\n        setTimeout(async()=>{\r\n         await this.localStream.close({type:\"video\"});\r\n         this.currentStep = 7;\r\n         this.restore();\r\n        },5000)\r\n        \r\n      }catch{\r\n        console.warn(\"摄像头预览出错\");\r\n        (this.testUnites.find(e=>e.id==6)).notError=false; \r\n        this.currentStep =7;\r\n        this.restore();\r\n      }\r\n      \r\n    },\r\n    restore() {\r\n      setTimeout(() => {\r\n        this.currentStep = 0;\r\n        this.testing = false;\r\n        this.bitrateData= {\r\n          columns: [\"index\", \"发送视频码率\", \"发送音频码率\"],\r\n          rows: [\r\n              {\r\n                index: 0,\r\n                发送视频码率: 0,\r\n                发送音频码率: 0,\r\n              },\r\n            ],\r\n        };\r\n        this.packetsData={\r\n          columns: [\"index\", \"发送视频丢包率\", \"发送音频丢包率\"],\r\n          rows: [\r\n            {\r\n              index: 0,\r\n              发送视频丢包率: 0,\r\n              发送音频丢包率: 0,\r\n            },\r\n          ],\r\n        };\r\n        this.inputVolume=0;\r\n        this.subscribed=false;\r\n        for (let profile of this.profiles) {\r\n          profile.status='pending';\r\n        }\r\n      }, 10000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}